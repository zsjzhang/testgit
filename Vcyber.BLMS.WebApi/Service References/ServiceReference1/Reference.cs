//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vcyber.BLMS.WebApi.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQRForAPP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckQRForAPP(string code, string way);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQRForAPP", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckQRForAPPAsync(string code, string way);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQRForWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckQRForWeb(string code, string way, string address, float Longitude, float Latitude, float Altitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQRForWeb", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckQRForWebAsync(string code, string way, string address, float Longitude, float Latitude, float Altitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQRForWebNew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckQRForWebNew(string code, string address, float Longitude, float Latitude, float Altitude, string uid, string ctype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQRForWebNew", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckQRForWebNewAsync(string code, string address, float Longitude, float Latitude, float Altitude, string uid, string ctype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSecurityList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSecurityList(string StartTime, string EndTime, string ctype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSecurityList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSecurityListAsync(string StartTime, string EndTime, string ctype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateQR", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateQR(string code, string uid, string ctype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateQR", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateQRAsync(string code, string uid, string ctype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoginCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LoginCheck(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoginCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LoginCheckAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePWD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdatePWD(string username, string oldpwd, string newpwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePWD", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdatePWDAsync(string username, string oldpwd, string newpwd);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : Vcyber.BLMS.WebApi.ServiceReference1.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<Vcyber.BLMS.WebApi.ServiceReference1.WebService1Soap>, Vcyber.BLMS.WebApi.ServiceReference1.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public string CheckQRForAPP(string code, string way) {
            return base.Channel.CheckQRForAPP(code, way);
        }
        
        public System.Threading.Tasks.Task<string> CheckQRForAPPAsync(string code, string way) {
            return base.Channel.CheckQRForAPPAsync(code, way);
        }
        
        public string CheckQRForWeb(string code, string way, string address, float Longitude, float Latitude, float Altitude) {
            return base.Channel.CheckQRForWeb(code, way, address, Longitude, Latitude, Altitude);
        }
        
        public System.Threading.Tasks.Task<string> CheckQRForWebAsync(string code, string way, string address, float Longitude, float Latitude, float Altitude) {
            return base.Channel.CheckQRForWebAsync(code, way, address, Longitude, Latitude, Altitude);
        }
        
        public string CheckQRForWebNew(string code, string address, float Longitude, float Latitude, float Altitude, string uid, string ctype) {
            return base.Channel.CheckQRForWebNew(code, address, Longitude, Latitude, Altitude, uid, ctype);
        }
        
        public System.Threading.Tasks.Task<string> CheckQRForWebNewAsync(string code, string address, float Longitude, float Latitude, float Altitude, string uid, string ctype) {
            return base.Channel.CheckQRForWebNewAsync(code, address, Longitude, Latitude, Altitude, uid, ctype);
        }
        
        public string GetSecurityList(string StartTime, string EndTime, string ctype) {
            return base.Channel.GetSecurityList(StartTime, EndTime, ctype);
        }
        
        public System.Threading.Tasks.Task<string> GetSecurityListAsync(string StartTime, string EndTime, string ctype) {
            return base.Channel.GetSecurityListAsync(StartTime, EndTime, ctype);
        }
        
        public string UpdateQR(string code, string uid, string ctype) {
            return base.Channel.UpdateQR(code, uid, ctype);
        }
        
        public System.Threading.Tasks.Task<string> UpdateQRAsync(string code, string uid, string ctype) {
            return base.Channel.UpdateQRAsync(code, uid, ctype);
        }
        
        public string LoginCheck(string username, string password) {
            return base.Channel.LoginCheck(username, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginCheckAsync(string username, string password) {
            return base.Channel.LoginCheckAsync(username, password);
        }
        
        public string UpdatePWD(string username, string oldpwd, string newpwd) {
            return base.Channel.UpdatePWD(username, oldpwd, newpwd);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePWDAsync(string username, string oldpwd, string newpwd) {
            return base.Channel.UpdatePWDAsync(username, oldpwd, newpwd);
        }
    }
}
