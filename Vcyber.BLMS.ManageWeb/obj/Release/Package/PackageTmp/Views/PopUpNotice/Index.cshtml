@{
    Layout = null;
}
<style>
    body {
        display: none;
    }
</style>

<script>

    $(function () {
        if (self == top) {
            var theBody = document.getElementsByTagName('body')[0];
            theBody.style.display = "block";
        } else {
            top.location = self.location;
        }
    });


</script>

<div class="container panel panel-default">
    <div class="panel-body"><strong>内容管理 - 弹出框公告</strong></div>
</div>

<div class="panel panel-default">
    <div class="panel-body">
        <form name="form" class="form-horizontal" novalidate>
            <div class="form-group">
                <button class="btn btn-primary" style=" margin-left:15px;" type="submit" data-toggle="modal" ng-click="addNotice()">添加公告</button>
            </div>
        </form>
        <div class="gridStyle" style="min-height: 410px; border: 1px solid rgb(212, 212, 212)" ng-grid="gridOptions">
        </div>
    </div>

</div>

<!-- Modal 添加对话框 -->
<!-- Modal 更新内容对话框 -->
<div class="modal fade" id="AddNoticeInfo" tabindex="-1" role="dialog" aria-labelledby="AddNoticeInfoLabel" aria-hidden="false">
    <div class="modal-dialog" style="width:800px;">
        <div class="modal-content">
            <form class="form-horizontal" name="form" ng-submit="create(form.$valid)" novalidate>
                <div class="modal-header">
                    <input name="id" ng-model="createData.Id" type="hidden" />
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title" id="showInfoModalLabel">添加公告</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="col-md-2 control-label"><span style="color:red">*</span>标题:</label>
                        <div class="col-md-10">
                            <input class="form-control" name="title" ng-model="createData.Title" placeholder="30个字以内" ng-required="true" ng-maxlength="30" />
                            <span ng-show="form.title.$invalid">不能为空,30个字符内</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label"><span style="color:red">*</span>文章内容:</label>
                        <div class="col-md-10">
                            <script id="editor" type="text/plain" style="width: 600px; height: 200px;">
                            </script>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label"><span style="color:red">*</span>显示:</label>
                        <div class="col-md-10">
                            <label class="radio-inline">
                                <input type="radio" name="optionsRadios" value="1" ng-model="createData.IsDisplay" ng-checked="true">
                                是
                            </label>
                            <label class="radio-inline">
                                <input type="radio" name="optionsRadios" value="0" ng-model="createData.IsDisplay">
                                否
                            </label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                    <button type="submit" class="btn btn-primary" ng-disabled="form.$invalid">保存</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script type="text/javascript">

    //实例化编辑器
    //建议使用工厂方法getEditor创建和引用编辑器实例，如果在某个闭包下引用该编辑器，直接调用UE.getEditor('editor')就能拿到相关的实例
    // var ue = UE.getEditor('editor');
    var ue = new baidu.editor.ui.Editor();
    ue.render("editor");

    function isFocus(e) {
        alert(UE.getEditor('editor').isFocus());
        UE.dom.domUtils.preventDefault(e)
    }
    function setblur(e) {
        UE.getEditor('editor').blur();
        UE.dom.domUtils.preventDefault(e)
    }
    function insertHtml() {
        var value = prompt('插入html代码', '');
        UE.getEditor('editor').execCommand('insertHtml', value)
    }
    function createEditor() {
        enableBtn();
        UE.getEditor('editor');
    }
    function getAllHtml() {
        alert(UE.getEditor('editor').getAllHtml())
    }
    function getContent() {
        return UE.getEditor('editor').getContent();
    }
    function getPlainTxt() {
        var arr = [];
        arr.push("使用editor.getPlainTxt()方法可以获得编辑器的带格式的纯文本内容");
        arr.push("内容为：");
        arr.push(UE.getEditor('editor').getPlainTxt());
        alert(arr.join('\n'))
    }
    function setContent(isAppendTo) {
        var arr = [];
        arr.push("使用editor.setContent('欢迎使用ueditor')方法可以设置编辑器的内容");
        UE.getEditor('editor').setContent('欢迎使用ueditor', isAppendTo);
        alert(arr.join("\n"));
    }
    function setContent(htmlContent,isAppendTo) {
        UE.getEditor('editor').setContent(htmlContent, isAppendTo);
    }
    function setDisabled() {
        UE.getEditor('editor').setDisabled('fullscreen');
        disableBtn("enable");
    }

    function setEnabled() {
        UE.getEditor('editor').setEnabled();
        enableBtn();
    }

    function getText() {
        //当你点击按钮时编辑区域已经失去了焦点，如果直接用getText将不会得到内容，所以要在选回来，然后取得内容
        var range = UE.getEditor('editor').selection.getRange();
        range.select();
        var txt = UE.getEditor('editor').selection.getText();
        alert(txt)
    }

    function getContentTxt() {
        var arr = [];
        arr.push("使用editor.getContentTxt()方法可以获得编辑器的纯文本内容");
        arr.push("编辑器的纯文本内容为：");
        arr.push(UE.getEditor('editor').getContentTxt());
        alert(arr.join("\n"));
    }
    function hasContent() {
        var arr = [];
        arr.push("使用editor.hasContents()方法判断编辑器里是否有内容");
        arr.push("判断结果为：");
        arr.push(UE.getEditor('editor').hasContents());
        alert(arr.join("\n"));
    }
    function setFocus() {
        UE.getEditor('editor').focus();
    }
    function deleteEditor() {
        disableBtn();
        UE.getEditor('editor').destroy();
    }
    function disableBtn(str) {
        var div = document.getElementById('btns');
        var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            if (btn.id == str) {
                UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
            } else {
                btn.setAttribute("disabled", "true");
            }
        }
    }
    function enableBtn() {
        var div = document.getElementById('btns');
        var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
        }
    }

    function getLocalData() {
        alert(UE.getEditor('editor').execCommand("getlocaldata"));
    }

    function clearLocalData() {
        UE.getEditor('editor').execCommand("clearlocaldata");
        alert("已清空草稿箱")
    }
</script>