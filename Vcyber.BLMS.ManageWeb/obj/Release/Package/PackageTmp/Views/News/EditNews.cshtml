@{
    Layout = null;
}

<style>
    body {
        display: none;
    }
</style>

<script>

    $(function () {
        if (self == top) {
            var theBody = document.getElementsByTagName('body')[0];
            theBody.style.display = "block";
        } else {
            top.location = self.location;
        }
    });


</script>
<div class="container panel panel-default">
    <div class="panel-body"><strong>内容管理 - 编辑新闻</strong></div>
</div>
<div class="panel panel-default">
    <div class="row">
        <form class="form-horizontal" name="form" ng-submit="edit(form.$valid)" novalidate>
            <div class="form-group">
                <div class="col-md-8" ng-show="0">
                    <label class="form-control" ng-model="editData.Id" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label"><span style="color:red">*</span>标题:</label>
                <div class="col-md-8">
                    <input class="form-control" name="title" ng-model="editData.Title" ng-required="true" ng-maxlength="100" />
                    <span ng-show="form.title.$invalid">不能为空,100个字符内</span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label"><span style="color:red">*</span>缩略图:</label>
                <div class="col-md-8">
                    <label class="form-control" ng-model="editData.MajorImageUrl" ng-show="0" />
                    <img ng-src="{{editData.image}}" style="height: 100px; width: 200px" class="img-responsive">
                    <input type="file" ng-file-select ng-file-change="upload($files)" multiple accept="image/*">
                    <div class="button" ng-file-select ng-file-change="upload($files)" data-multiple="true"></div>
                    <p class="label-warning">支持gif、jpeg、jpg、png格式，图片最大?建议上传尺寸：?</p>

                </div>
            </div>

            <div class="form-group">
                <label class="col-md-2 control-label"><span style="color:red">*</span>简介:</label>
                <div class="col-md-8">
                    <textarea class="form-control" name="summary" ng-model="editData.Summary" placeholder="200个字以内" ng-required="true" ng-maxlength="200"></textarea>
                    <span ng-show="form.summary.$invalid">不能为空,200个字符内</span>
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-2 control-label"><span style="color:red">*</span>文章内容:</label>
                <div class="col-md-8">
                    <script id="editor" type="text/plain" style="width: 760px; height: 400px;" ng-model="editData.Conten">
                    </script>
                </div>
            </div>
          
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="submit" class="btn btn-primary" ng-disabled="form.$invalid">保存</button>
                </div>
            </div>

        </form>
    </div>
</div>
<script type="text/javascript">

    //实例化编辑器
    //建议使用工厂方法getEditor创建和引用编辑器实例，如果在某个闭包下引用该编辑器，直接调用UE.getEditor('editor')就能拿到相关的实例
    // var ue = UE.getEditor('editor');
    var ue = new baidu.editor.ui.Editor();
    ue.render("editor");

    function isFocus(e) {
        alert(UE.getEditor('editor').isFocus());
        UE.dom.domUtils.preventDefault(e)
    }
    function setblur(e) {
        UE.getEditor('editor').blur();
        UE.dom.domUtils.preventDefault(e)
    }
    function insertHtml() {
        var value = prompt('插入html代码', '');
        UE.getEditor('editor').execCommand('insertHtml', value)
    }
    function createEditor() {
        enableBtn();
        UE.getEditor('editor');
    }
    function getAllHtml() {
        alert(UE.getEditor('editor').getAllHtml())
    }
    function getContent() {
        return UE.getEditor('editor').getContent();
    }
    function getPlainTxt() {
        var arr = [];
        arr.push("使用editor.getPlainTxt()方法可以获得编辑器的带格式的纯文本内容");
        arr.push("内容为：");
        arr.push(UE.getEditor('editor').getPlainTxt());
        alert(arr.join('\n'))
    }
    function setContent(isAppendTo) {
        var test = isAppendTo;
        UE.getEditor('editor').setContent(test, isAppendTo);
    }
    function setDisabled() {
        UE.getEditor('editor').setDisabled('fullscreen');
        disableBtn("enable");
    }

    function setEnabled() {
        UE.getEditor('editor').setEnabled();
        enableBtn();
    }

    function getText() {
        //当你点击按钮时编辑区域已经失去了焦点，如果直接用getText将不会得到内容，所以要在选回来，然后取得内容
        var range = UE.getEditor('editor').selection.getRange();
        range.select();
        var txt = UE.getEditor('editor').selection.getText();
        alert(txt)
    }

    function getContentTxt() {
        var arr = [];
        arr.push("使用editor.getContentTxt()方法可以获得编辑器的纯文本内容");
        arr.push("编辑器的纯文本内容为：");
        arr.push(UE.getEditor('editor').getContentTxt());
        alert(arr.join("\n"));
    }
    function hasContent() {
        var arr = [];
        arr.push("使用editor.hasContents()方法判断编辑器里是否有内容");
        arr.push("判断结果为：");
        arr.push(UE.getEditor('editor').hasContents());
        alert(arr.join("\n"));
    }
    function setFocus() {
        UE.getEditor('editor').focus();
    }
    function deleteEditor() {
        disableBtn();
        UE.getEditor('editor').destroy();
    }
    function disableBtn(str) {
        var div = document.getElementById('btns');
        var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            if (btn.id == str) {
                UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
            } else {
                btn.setAttribute("disabled", "true");
            }
        }
    }
    function enableBtn() {
        var div = document.getElementById('btns');
        var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
        }
    }

    function getLocalData() {
        alert(UE.getEditor('editor').execCommand("getlocaldata"));
    }

    function clearLocalData() {
        UE.getEditor('editor').execCommand("clearlocaldata");
        alert("已清空草稿箱")
    }
</script>
